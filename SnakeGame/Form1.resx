<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfEAAAAUCAIAAAASrpOvAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAn
        EAAAJxABlGlRGQAABCRJREFUeF7tmz1rVEEUhv1DWloKloKVYKGdjViIYGOjnYV2IthZ2AiCmEYkIAhb
        xhRCYmGjbTrxN/jAC4fhnJmb3WWT3F1eeBA9c+bjzjLPzJ1dL/07OTLGGLMb2OnGGLMmv38uDhZ7J3++
        R4R/vnr57Mmj++Lzx7dRdD7Y6cYYszLfvrx/cO/u1SuX4cb1a8id4Id3rxUJiLS1zoEtdjp7I9PKlAUp
        wRhjzgJO4sndOB0jpSC8ffMi1f314+sZofa31em80bA3pulLOcYYs3E4Pibz6ILlYLGX4glyJN+DxafN
        sqzT2WHu3LqZhjUCw1KFZ4uLJMHz86g0leKaBXY2drxq5wo57Y7XrRKloJHUBHqkneV7bG/KjDG7B4JC
        F3rXl5dajg/32/sAIs+fPg5LYEhKldl1On4jLsgJp/99eHtTLOt0Rp8GBwQZGc+Q4mJUCznWvYEg+Ugz
        xUG9QFxXtUXUoijFhUYOvAelIrFGj+1GYoyZJ+ud1RBFWvIcBNs2R+dCjAFhc9H1kpQVXKTTq4V5+Cit
        jypH8wApDjx5zQfy62cw3YtKR06PKe6Kmw2TolV71HMZY+bMeme19sQtMEC02bUZce0fZLZwwJ+709PI
        gHFHaZ0LDb07CzwqdVMQTu1lVGvkdPKrsoH9CaFrZ05FED1OnO6NMXNmvbNaCkLrn7oTAPFqP9D+kYIw
        I6fXczqRlFNZ1enkJ9r7rDoGID5yelScIFVZhtSCMWZupDULy5zVutYmn6Ljw/0UB7WZggJ3zd3po0vz
        CjueXmSAB0ilMOH0CbpzChSNnM5hvLsNEGSEp57TjTFbSlrUgJdY2hNQC3133+y7kCndp7jYAqeD7sG7
        pHGDhr6q07u3YNNQa+T0OON3m+WNiaIUBMamWhBff7dEqTFmnqRFDe26HtEVBUsew/BnioO+k0tBoVop
        CEkgF+n0ajdGHKX1nUX3U6SlOEw4PUUEJ3T1Mqo1crpqTSekCLSf/ahHY8ycSWsWllnXKQLtLfzoPj1F
        hAyZgkA8GoSLdHoaGbRzVK84Jpze/UmQWktBmJ5T1erOnQYgugn6PmDUpqjPpVrGmDlTV267ruuqly5S
        EOIaGaq1ZKcUFKPfvbRfEMK8nM6sMWjoilvbUS3SHNXZoZ1uL0Ajo170a8Xu3GkAopugurVZPifyRz22
        zRpj5km9RYl1jVVTEchLKRg35iJZi1Jaq7WAvji5Ulrj0Zq4SKd3b5q68KixubVa5HlCiO3s8HdNDXR/
        FdSFHSV+fn58uE8jAY1Eg90E/VeuKGVUjC21X6FHC92YrQClYiFclFZxRb7SLyZaRbDYFQxIa0tD921r
        lEZFEpSPkQiGr1rC6ZtlKacbY4zZLJLvGaEu7HRjjDk/kog3RbRvpxtjzO5gpxtjzK5wcvQfXa75v3IR
        9HkAAAAASUVORK5CYII=
</value>
  </data>
</root>